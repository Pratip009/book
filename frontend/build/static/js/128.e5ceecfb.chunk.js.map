{"version":3,"file":"static/js/128.e5ceecfb.chunk.js","mappings":"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","sources":["component/Admin/BlogPost.jsx","../node_modules/@mui/material/Link/linkClasses.js","../node_modules/@mui/material/Link/getTextDecoration.js","../node_modules/@mui/material/Link/Link.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Grid, Paper, Typography, Link, IconButton } from \"@mui/material\";\r\nimport { FaTrash } from \"react-icons/fa\";\r\n\r\nconst BlogPost = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [subtitle, setSubtitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const [blogItems, setBlogItems] = useState([]);\r\n\r\n  const fetchBlogItems = async () => {\r\n    const response = await fetch(\"/api/v1/blogs\");\r\n    const data = await response.json();\r\n    setBlogItems(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchBlogItems();\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const response = await fetch(\"/api/v1/blogs\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ title, subtitle, description, imageUrl }),\r\n    });\r\n\r\n    const result = await response.json();\r\n    if (response.ok) {\r\n      alert(result.message);\r\n      setTitle(\"\");\r\n      setSubtitle(\"\");\r\n      setDescription(\"\");\r\n      setImageUrl(\"\");\r\n      fetchBlogItems(); // Refresh the blog items list\r\n    } else {\r\n      alert(result.message);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    console.log(`Deleting blog item with ID: ${id}`);\r\n\r\n    try {\r\n      const response = await fetch(`/api/v1/blogs/${id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n\r\n      const text = await response.text();\r\n      console.log(\"Raw response:\", text);\r\n\r\n      try {\r\n        const result = JSON.parse(text);\r\n        if (response.ok) {\r\n          alert(result.message);\r\n          fetchBlogItems();\r\n        } else {\r\n          alert(result.message);\r\n        }\r\n      } catch (jsonError) {\r\n        console.error(\"Error parsing JSON response:\", text);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Network or server error:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Paper\r\n        elevation={3}\r\n        style={{\r\n          padding: \"20px\",\r\n          maxWidth: \"500px\",\r\n          margin: \"auto\",\r\n          marginTop: \"50px\",\r\n        }}\r\n      >\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          Add Blog Item\r\n        </Typography>\r\n        <form onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Title\"\r\n                variant=\"outlined\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Subtitle\"\r\n                variant=\"outlined\"\r\n                value={subtitle}\r\n                onChange={(e) => setSubtitle(e.target.value)}\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Description\"\r\n                variant=\"outlined\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Image URL\"\r\n                variant=\"outlined\"\r\n                value={imageUrl}\r\n                onChange={(e) => setImageUrl(e.target.value)}\r\n                required\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Button\r\n                fullWidth\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                style={{ backgroundColor: \"#FF4E00\", color: \"#fff\" }}\r\n              >\r\n                Add Blog Item\r\n              </Button>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Typography align=\"center\">\r\n                <Link\r\n                  href=\"https://console.cloudinary.com/console/c-b8a1761df49cd89ee685d0f02e0786/media_library/search?q=&view_mode=mosaic\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener\"\r\n                  style={{ color: \"#007bff\", textDecoration: \"none\", fontWeight: \"bold\" }}\r\n                >\r\n                  Click here to get the image URL\r\n                </Link>\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n\r\n      <Paper\r\n        elevation={3}\r\n        style={{\r\n          padding: \"20px\",\r\n          maxWidth: \"800px\",\r\n          margin: \"auto\",\r\n          marginTop: \"50px\",\r\n        }}\r\n      >\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Blog Items\r\n        </Typography>\r\n        <Grid container spacing={2}>\r\n          {blogItems.map((item) => (\r\n            <Grid item xs={12} key={item._id}>\r\n              <Paper elevation={1} style={{ padding: \"10px\" }}>\r\n                <Grid container alignItems=\"center\" spacing={2}>\r\n                  <Grid item xs={2}>\r\n                    <img src={item.imageUrl} alt={item.title} style={{ width: \"100%\", borderRadius: \"5px\" }} />\r\n                  </Grid>\r\n                  <Grid item xs={8}>\r\n                    <Typography variant=\"h6\">{item.title}</Typography>\r\n                    <Typography variant=\"subtitle1\">{item.subtitle}</Typography>\r\n                    <Typography variant=\"subtitle2\">{item.description}</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <IconButton onClick={() => handleDelete(item._id)}>\r\n                      <FaTrash />\r\n                    </IconButton>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogPost;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import { getPath } from '@mui/system';\nimport { alpha } from '@mui/system/colorManipulator';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport elementTypeAcceptingRef from '@mui/utils/elementTypeAcceptingRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const {\n      className,\n      color = 'primary',\n      component = 'a',\n      onBlur,\n      onFocus,\n      TypographyClasses,\n      underline = 'always',\n      variant = 'inherit',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n  const handleBlur = event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;"],"names":["BlogPost","title","setTitle","useState","subtitle","setSubtitle","description","setDescription","imageUrl","setImageUrl","blogItems","setBlogItems","fetchBlogItems","async","response","fetch","data","json","useEffect","_jsxs","children","Paper","elevation","style","padding","maxWidth","margin","marginTop","_jsx","Typography","variant","gutterBottom","onSubmit","e","preventDefault","method","headers","body","JSON","stringify","result","ok","alert","message","Grid","container","spacing","item","xs","TextField","fullWidth","label","value","onChange","target","required","Button","type","backgroundColor","color","align","Link","href","rel","textDecoration","fontWeight","map","alignItems","src","alt","width","borderRadius","IconButton","onClick","console","log","id","text","parse","jsonError","error","handleDelete","_id","FaTrash","getLinkUtilityClass","slot","generateUtilityClass","generateUtilityClasses","colorTransformations","primary","textPrimary","secondary","textSecondary","_ref","theme","ownerState","transformedColor","transformDeprecatedColors","getPath","channelColor","alpha","_excluded","LinkRoot","styled","name","overridesResolver","props","styles","root","capitalize","underline","component","button","_extends","textDecorationColor","getTextDecoration","position","WebkitTapHighlightColor","outline","border","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","focusVisible","React","inProps","ref","useDefaultProps","className","onBlur","onFocus","TypographyClasses","sx","other","_objectWithoutPropertiesLoose","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","useIsFocusVisible","setFocusVisible","handlerRef","useForkRef","classes","slots","composeClasses","useUtilityClasses","clsx","event","current","Object","keys","includes","Array","isArray"],"sourceRoot":""}