{"ast":null,"code":"import { LOGIN_REQUEST, LOGIN_FAIL, LOGIN_SUCCESS, CLEAR_ERRORS, REGISTER_USER_FAIL, REGISTER_USER_SUCCESS, REGISTER_USER_REQUEST, LOAD_USER_FAIL, LOAD_USER_SUCCESS, LOAD_USER_REQUEST, LOGOUT_FAIL, LOGOUT_SUCCESS, UPDATE_PROFILE_REQUEST, UPDATE_PROFILE_SUCCESS, UPDATE_PROFILE_FAIL, UPDATE_PROFILE_RESET, UPDATE_PASSWORD_FAIL, UPDATE_PASSWORD_RESET, UPDATE_PASSWORD_SUCCESS, UPDATE_PASSWORD_REQUEST, FORGOT_PASSWORD_REQUEST, FORGOT_PASSWORD_SUCCESS, FORGOT_PASSWORD_FAIL, RESET_PASSWORD_REQUEST, RESET_PASSWORD_SUCCESS, RESET_PASSWORD_FAIL, ALL_USERS_REQUEST, ALL_USERS_SUCCESS, ALL_USERS_FAIL, DELETE_USER_REQUEST, DELETE_USER_SUCCESS, DELETE_USER_FAIL, DELETE_USER_RESET, UPDATE_USER_REQUEST, UPDATE_USER_SUCCESS, UPDATE_USER_FAIL, UPDATE_USER_RESET, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL } from \"../constants/userConstanat\";\nconst initialState = {\n  loading: false,\n  isAuthenticated: false,\n  user: {},\n  error: null\n};\nexport const userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n    case REGISTER_USER_REQUEST:\n    case LOAD_USER_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        isAuthenticated: false,\n        error: null\n      };\n    case LOGIN_SUCCESS:\n    case REGISTER_USER_SUCCESS:\n    case LOAD_USER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: true,\n        user: action.payload,\n        error: null\n      };\n    case LOGOUT_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        user: {},\n        isAuthenticated: false,\n        error: null\n      };\n    case LOGIN_FAIL:\n    case REGISTER_USER_FAIL:\n    case LOAD_USER_FAIL:\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: false,\n        user: {},\n        error: action.payload\n      };\n    case LOGOUT_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null\n      };\n\n    // This case will handle the scenario where loading the user profile fails, and you need to reset the user state\n\n    default:\n      return state;\n  }\n};\nexport const profileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case UPDATE_PROFILE_REQUEST:\n    case UPDATE_PASSWORD_REQUEST:\n    case UPDATE_USER_REQUEST:\n    case DELETE_USER_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case UPDATE_PROFILE_SUCCESS:\n    case UPDATE_PASSWORD_SUCCESS:\n    case UPDATE_USER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        isUpdated: action.payload // payLoad has success\n      };\n\n    case DELETE_USER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        isDeleted: action.payload.success,\n        message: action.payload.message\n      };\n    case UPDATE_PROFILE_FAIL:\n    case UPDATE_PASSWORD_FAIL:\n    case UPDATE_USER_FAIL:\n    case DELETE_USER_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload // error message\n      };\n\n    // once data upadted then for loading false and isUpdated false ..\n    case UPDATE_PROFILE_RESET:\n    case UPDATE_PASSWORD_RESET:\n    case UPDATE_USER_RESET:\n      return {\n        ...state,\n        isUpdated: false\n      };\n    case DELETE_USER_RESET:\n      return {\n        ...state,\n        isDeleted: false\n      };\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\nexport const forgetPasswordReducer = (state = {}, action) => {\n  switch (action.type) {\n    case FORGOT_PASSWORD_REQUEST:\n    case RESET_PASSWORD_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case FORGOT_PASSWORD_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        message: action.payload\n      };\n    case RESET_PASSWORD_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        success: action.payload\n      };\n    case FORGOT_PASSWORD_FAIL:\n    case RESET_PASSWORD_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\n\n// get all users\nexport const allUsersReducer = (state = {\n  users: []\n}, action) => {\n  switch (action.type) {\n    case ALL_USERS_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case ALL_USERS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        users: action.payload\n      };\n    case ALL_USERS_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\n\n// get user Details --> admin\n\nexport const userDetailsReducer = (state = {\n  user: {}\n}, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case USER_DETAILS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        user: action.payload\n      };\n    case USER_DETAILS_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["LOGIN_REQUEST","LOGIN_FAIL","LOGIN_SUCCESS","CLEAR_ERRORS","REGISTER_USER_FAIL","REGISTER_USER_SUCCESS","REGISTER_USER_REQUEST","LOAD_USER_FAIL","LOAD_USER_SUCCESS","LOAD_USER_REQUEST","LOGOUT_FAIL","LOGOUT_SUCCESS","UPDATE_PROFILE_REQUEST","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_FAIL","UPDATE_PROFILE_RESET","UPDATE_PASSWORD_FAIL","UPDATE_PASSWORD_RESET","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_REQUEST","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAIL","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAIL","ALL_USERS_REQUEST","ALL_USERS_SUCCESS","ALL_USERS_FAIL","DELETE_USER_REQUEST","DELETE_USER_SUCCESS","DELETE_USER_FAIL","DELETE_USER_RESET","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_FAIL","UPDATE_USER_RESET","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","initialState","loading","isAuthenticated","user","error","userReducer","state","action","type","payload","profileReducer","isUpdated","isDeleted","success","message","forgetPasswordReducer","allUsersReducer","users","userDetailsReducer"],"sources":["C:/Users/prati/OneDrive/Desktop/my docs/book/frotend/src/reducers/userReducer.jsx"],"sourcesContent":["import {\r\n  LOGIN_REQUEST,\r\n  LOGIN_FAIL,\r\n  LOGIN_SUCCESS,\r\n  CLEAR_ERRORS,\r\n  REGISTER_USER_FAIL,\r\n  REGISTER_USER_SUCCESS,\r\n  REGISTER_USER_REQUEST,\r\n  LOAD_USER_FAIL,\r\n  LOAD_USER_SUCCESS,\r\n  LOAD_USER_REQUEST,\r\n  LOGOUT_FAIL,\r\n  LOGOUT_SUCCESS,\r\n  UPDATE_PROFILE_REQUEST,\r\n  UPDATE_PROFILE_SUCCESS,\r\n  UPDATE_PROFILE_FAIL,\r\n  UPDATE_PROFILE_RESET,\r\n  UPDATE_PASSWORD_FAIL,\r\n  UPDATE_PASSWORD_RESET,\r\n  UPDATE_PASSWORD_SUCCESS,\r\n  UPDATE_PASSWORD_REQUEST,\r\n  FORGOT_PASSWORD_REQUEST,\r\n  FORGOT_PASSWORD_SUCCESS,\r\n  FORGOT_PASSWORD_FAIL,\r\n  RESET_PASSWORD_REQUEST,\r\n  RESET_PASSWORD_SUCCESS,\r\n  RESET_PASSWORD_FAIL,\r\n  ALL_USERS_REQUEST,\r\n  ALL_USERS_SUCCESS,\r\n  ALL_USERS_FAIL,\r\n  DELETE_USER_REQUEST,\r\n  DELETE_USER_SUCCESS,\r\n  DELETE_USER_FAIL,\r\n  DELETE_USER_RESET,\r\n  UPDATE_USER_REQUEST,\r\n  UPDATE_USER_SUCCESS,\r\n  UPDATE_USER_FAIL,\r\n  UPDATE_USER_RESET,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n} from \"../constants/userConstanat\";\r\n\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  isAuthenticated: false,\r\n  user: {},\r\n  error: null,\r\n};\r\n\r\nexport const userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_REQUEST:\r\n    case REGISTER_USER_REQUEST:\r\n    case LOAD_USER_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        isAuthenticated: false,\r\n        error: null,\r\n      };\r\n\r\n    case LOGIN_SUCCESS:\r\n    case REGISTER_USER_SUCCESS:\r\n    case LOAD_USER_SUCCESS:\r\n \r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticated: true,\r\n        user: action.payload,\r\n        error: null,\r\n      };\r\n\r\n    case LOGOUT_SUCCESS:\r\n      \r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        user: {},\r\n        isAuthenticated: false,\r\n        error: null,\r\n      };\r\n\r\n    case LOGIN_FAIL:\r\n    case REGISTER_USER_FAIL:\r\n    case LOAD_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticated: false,\r\n        user: {},\r\n        error: action.payload,\r\n      };\r\n\r\n    case LOGOUT_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n\r\n    // This case will handle the scenario where loading the user profile fails, and you need to reset the user state\r\n   \r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const profileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_PROFILE_REQUEST:\r\n    case UPDATE_PASSWORD_REQUEST:\r\n    case UPDATE_USER_REQUEST:\r\n    case DELETE_USER_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case UPDATE_PROFILE_SUCCESS:\r\n    case UPDATE_PASSWORD_SUCCESS:\r\n    case UPDATE_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isUpdated: action.payload, // payLoad has success\r\n      };\r\n\r\n    case DELETE_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isDeleted: action.payload.success,\r\n        message: action.payload.message,\r\n      };\r\n\r\n    case UPDATE_PROFILE_FAIL:\r\n    case UPDATE_PASSWORD_FAIL:\r\n    case UPDATE_USER_FAIL:\r\n    case DELETE_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload, // error message\r\n      };\r\n\r\n    // once data upadted then for loading false and isUpdated false ..\r\n    case UPDATE_PROFILE_RESET:\r\n    case UPDATE_PASSWORD_RESET:\r\n    case UPDATE_USER_RESET:\r\n      return {\r\n        ...state,\r\n        isUpdated: false,\r\n      };\r\n\r\n    case DELETE_USER_RESET:\r\n      return {\r\n        ...state,\r\n        isDeleted: false,\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const forgetPasswordReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FORGOT_PASSWORD_REQUEST:\r\n    case RESET_PASSWORD_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case FORGOT_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload,\r\n      };\r\n    case RESET_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: action.payload,\r\n      };\r\n\r\n    case FORGOT_PASSWORD_FAIL:\r\n    case RESET_PASSWORD_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// get all users\r\nexport const allUsersReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case ALL_USERS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case ALL_USERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        users: action.payload,\r\n      };\r\n\r\n    case ALL_USERS_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// get user Details --> admin\r\n\r\nexport const userDetailsReducer =  (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case USER_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        user: action.payload,\r\n      };\r\n\r\n    case USER_DETAILS_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}