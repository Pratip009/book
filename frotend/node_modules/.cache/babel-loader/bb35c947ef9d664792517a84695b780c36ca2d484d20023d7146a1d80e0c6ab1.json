{"ast":null,"code":"import { CREATE_ORDER_REQUEST, CREATE_ORDER_FAIL, CREATE_ORDER_SUCCESS, CLEAR_ERRORS, MY_ORDER_REQUEST, MY_ORDER_SUCCESS, MY_ORDER_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ALL_ORDERS_REQUEST, ALL_ORDERS_FAIL, ALL_ORDERS_SUCCESS, DELETE_ORDER_REQUEST, DELETE_ORDER_SUCCESS, DELETE_ORDER_FAIL, UPDATE_ORDER_REQUEST, UPDATE_ORDER_SUCCESS, UPDATE_ORDER_FAIL } from \"../constants/orderConstant\";\nimport axios from \"axios\";\nexport const createOrder = order => async dispatch => {\n  try {\n    dispatch({\n      type: CREATE_ORDER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/v1/order/new\", order, config);\n    dispatch({\n      type: CREATE_ORDER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CREATE_ORDER_FAIL,\n      payload: error.message\n    });\n  }\n};\n\n// get all orders\nexport const myOrders = () => async dispatch => {\n  try {\n    dispatch({\n      type: MY_ORDER_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/v1/orders/myOrders\");\n    dispatch({\n      type: MY_ORDER_SUCCESS,\n      payload: data.userOrders\n    });\n  } catch (error) {\n    dispatch({\n      type: MY_ORDER_FAIL,\n      payload: error.message\n    });\n  }\n};\n\n// get single order\n\nexport const getOrderDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/order/${id}`);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data.order\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const getAllOrders = () => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_ORDERS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/admin/orders`);\n    dispatch({\n      type: ALL_ORDERS_SUCCESS,\n      payload: data.orders\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_ORDERS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\n// delet Order --> admin\nexport const deleteOrder = id => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_ORDER_REQUEST\n    });\n    const {\n      data\n    } = await axios.delete(`/api/v1/admin/order/${id}`);\n    dispatch({\n      type: DELETE_ORDER_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_ORDER_FAIL,\n      payload: error.message\n    });\n  }\n};\n\n// update order --> admin (status update) \nexport const updateOrder = (id, productData) => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_ORDER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/admin/order/${id}`, productData, config);\n    dispatch({\n      type: UPDATE_ORDER_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_ORDER_FAIL,\n      payload: error.message\n    });\n  }\n};\n\n// clear errors\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["CREATE_ORDER_REQUEST","CREATE_ORDER_FAIL","CREATE_ORDER_SUCCESS","CLEAR_ERRORS","MY_ORDER_REQUEST","MY_ORDER_SUCCESS","MY_ORDER_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ALL_ORDERS_REQUEST","ALL_ORDERS_FAIL","ALL_ORDERS_SUCCESS","DELETE_ORDER_REQUEST","DELETE_ORDER_SUCCESS","DELETE_ORDER_FAIL","UPDATE_ORDER_REQUEST","UPDATE_ORDER_SUCCESS","UPDATE_ORDER_FAIL","axios","createOrder","order","dispatch","type","config","headers","data","post","payload","error","message","myOrders","get","userOrders","getOrderDetails","id","getAllOrders","orders","deleteOrder","delete","success","updateOrder","productData","put","clearErrors"],"sources":["C:/Users/prati/OneDrive/Desktop/my docs/book/frotend/src/actions/orderAction.js"],"sourcesContent":["import {\r\n  CREATE_ORDER_REQUEST,\r\n  CREATE_ORDER_FAIL,\r\n  CREATE_ORDER_SUCCESS,\r\n  CLEAR_ERRORS,\r\n  MY_ORDER_REQUEST,\r\n  MY_ORDER_SUCCESS,\r\n  MY_ORDER_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ALL_ORDERS_REQUEST,\r\n  ALL_ORDERS_FAIL,\r\n  ALL_ORDERS_SUCCESS,\r\n  DELETE_ORDER_REQUEST,\r\n  DELETE_ORDER_SUCCESS,\r\n  DELETE_ORDER_FAIL,\r\n  UPDATE_ORDER_REQUEST,\r\n  UPDATE_ORDER_SUCCESS,\r\n  UPDATE_ORDER_FAIL,\r\n} from \"../constants/orderConstant\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CREATE_ORDER_REQUEST });\r\n\r\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const { data } = await axios.post(\"/api/v1/order/new\", order, config);\r\n\r\n    dispatch({ type: CREATE_ORDER_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: CREATE_ORDER_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\n// get all orders\r\nexport const myOrders = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: MY_ORDER_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/v1/orders/myOrders\");\r\n\r\n    dispatch({ type: MY_ORDER_SUCCESS, payload: data.userOrders });\r\n  } catch (error) {\r\n    dispatch({ type: MY_ORDER_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\n// get single order\r\n\r\nexport const getOrderDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ORDER_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/v1/order/${id}`);\r\n\r\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data.order });\r\n  } catch (error) {\r\n    dispatch({ type: ORDER_DETAILS_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nexport const getAllOrders = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ALL_ORDERS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/v1/admin/orders`);\r\n\r\n    dispatch({ type: ALL_ORDERS_SUCCESS, payload: data.orders });\r\n  } catch (error) {\r\n    dispatch({ type: ALL_ORDERS_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\n\r\n// delet Order --> admin\r\nexport const deleteOrder = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: DELETE_ORDER_REQUEST });\r\n\r\n    const { data } = await axios.delete(`/api/v1/admin/order/${id}`);\r\n\r\n    dispatch({ type: DELETE_ORDER_SUCCESS, payload: data.success });\r\n  } catch (error) {\r\n    dispatch({ type: DELETE_ORDER_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\n// update order --> admin (status update) \r\nexport const updateOrder = (id, productData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: UPDATE_ORDER_REQUEST });\r\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const { data } = await axios.put(\r\n      `/api/v1/admin/order/${id}`,\r\n      productData,\r\n      config\r\n    );\r\n    dispatch({ type: UPDATE_ORDER_SUCCESS, payload: data.success });\r\n  } catch (error) {\r\n    dispatch({ type: UPDATE_ORDER_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\n// clear errors\r\n\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_ERRORS });\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}