{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prati\\\\OneDrive\\\\Desktop\\\\my docs\\\\book\\\\frotend\\\\src\\\\component\\\\Route\\\\PrivateRoute.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { load_UserProfile } from \"../../actions/userAction\";\nimport CricketBallLoader from \"../layouts/loader/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PrivateRoute({\n  isAdmin,\n  component: Component,\n  ...rest\n}) {\n  _s();\n  const {\n    loading,\n    isAuthenticated,\n    user\n  } = useSelector(state => state.userData);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(load_UserProfile());\n  }, [dispatch]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(CricketBallLoader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If the user data failed to load or the user is not authenticated, Redirect to the login page\n  if (!isAuthenticated || !user) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If isAdmin is true and the user is not an admin, Redirect to the login page\n  if (isAdmin && user.role !== \"admin\") {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If the user is authenticated and isAdmin check is passed, render the specified component\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: props => /*#__PURE__*/_jsxDEV(Component, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 46\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n}\n_s(PrivateRoute, \"2utuY3u8mW+39EovMxybWwXw0Tc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","Redirect","Route","load_UserProfile","CricketBallLoader","jsxDEV","_jsxDEV","PrivateRoute","isAdmin","component","Component","rest","_s","loading","isAuthenticated","user","state","userData","dispatch","fileName","_jsxFileName","lineNumber","columnNumber","to","role","render","props","_c","$RefreshReg$"],"sources":["C:/Users/prati/OneDrive/Desktop/my docs/book/frotend/src/component/Route/PrivateRoute.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { load_UserProfile } from \"../../actions/userAction\";\r\nimport CricketBallLoader from \"../layouts/loader/Loader\";\r\nfunction PrivateRoute({ isAdmin, component: Component, ...rest }) {\r\n  const { loading, isAuthenticated, user } = useSelector(\r\n    (state) => state.userData\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(load_UserProfile());\r\n  }, [dispatch]);\r\n\r\n\r\n  if (loading) {\r\n    return <CricketBallLoader />; \r\n  }\r\n\r\n  // If the user data failed to load or the user is not authenticated, Redirect to the login page\r\n  if (!isAuthenticated || !user) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  // If isAdmin is true and the user is not an admin, Redirect to the login page\r\n  if (isAdmin && user.role !== \"admin\") {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  // If the user is authenticated and isAdmin check is passed, render the specified component\r\n  return <Route {...rest} render={(props) => <Component {...props} />} />;\r\n}\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,EAAEC,KAAK,QAAQ,kBAAkB;AAClD,SAASC,gBAAgB,QAAQ,0BAA0B;AAC3D,OAAOC,iBAAiB,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACzD,SAASC,YAAYA,CAAC;EAAEC,OAAO;EAAEC,SAAS,EAAEC,SAAS;EAAE,GAAGC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAChE,MAAM;IAAEC,OAAO;IAAEC,eAAe;IAAEC;EAAK,CAAC,GAAGhB,WAAW,CACnDiB,KAAK,IAAKA,KAAK,CAACC,QACnB,CAAC;EACD,MAAMC,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACdoB,QAAQ,CAACf,gBAAgB,CAAC,CAAC,CAAC;EAC9B,CAAC,EAAE,CAACe,QAAQ,CAAC,CAAC;EAGd,IAAIL,OAAO,EAAE;IACX,oBAAOP,OAAA,CAACF,iBAAiB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC9B;;EAEA;EACA,IAAI,CAACR,eAAe,IAAI,CAACC,IAAI,EAAE;IAC7B,oBAAOT,OAAA,CAACL,QAAQ;MAACsB,EAAE,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;;EAEA;EACA,IAAId,OAAO,IAAIO,IAAI,CAACS,IAAI,KAAK,OAAO,EAAE;IACpC,oBAAOlB,OAAA,CAACL,QAAQ;MAACsB,EAAE,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;;EAEA;EACA,oBAAOhB,OAAA,CAACJ,KAAK;IAAA,GAAKS,IAAI;IAAEc,MAAM,EAAGC,KAAK,iBAAKpB,OAAA,CAACI,SAAS;MAAA,GAAKgB;IAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzE;AAACV,EAAA,CA3BQL,YAAY;EAAA,QACwBR,WAAW,EAGrCC,WAAW;AAAA;AAAA2B,EAAA,GAJrBpB,YAAY;AA6BrB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}